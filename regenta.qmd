---
title: "<b>La Regenta</b><br>Análisis de la novela en R"
---

```{r setup, include=FALSE}

load("../textos/Tres_sombreros_de_copa.RData")

load("../textos/Regenta.RData")

library(quanteda)

regc <- regc[3:nrow(regc),]

# conviequanteda# convierte en un documento corpus
cp <- corpus(regc, text_field = "texto")

# define los capítulos como nombre
# de los documentos
docnames(cp) <- regc$capitulo


dic <- dictionary(
  list(
    familia=c("padre", "madre", "hijo", "hija", "hermano", "hermana"),
    sociedad=c("vetustense","señor","puebl","ciudad","conversa","amig","visit"),
    iglesia=c("cura","obispo","sacerdo","confesión","religi","canónig","capilla","basilica","cabildo","diócesis","obispado","sacrist","confes","monaguillo","Panteón","trascoro"),
    economia=c("dinero","deuda","negoci","trabaj","fortuna","rico","rica"),
    sentimientos=c("culpa","alegr","amor","remordimiento","ridículo","vergüenza","triste"),
    misticismo=c("Fermín de Pas","magistral","espirit","dios"),
    adulterio=c("Álvaro Mesía","Presidente del Casino", "marido", "placer", "pasión", "amante","amorío"),
    espacio=c("casino","catedral","vivero","casa","espolón","teatro","Encimada"),
    tiempo=c("otoño","verano","invierno","primavera","semana santa","navidad")
  )
)

dic.per <- dictionary(
  list(
    hombres=
      list(
        Alvaro=c("Álvaro Mesía",
                 "Álvaro",
                 "Mesía",
                 "presidente del casino"),
        Saturnino=c("Saturnino Bermúdez",
                    "Saturnino",
                    "Bermúdez",
                    "Saturno",
                    "Saturnillo"),
        Fermin=c("Magistral",
                 "Provisor",
                 "Fermín",
                 "De Pas",
                 "Fermín de Pas",
                 "Magistral"),
        Victor=c("Víctor",
                 "Víctor Quintanar",
                 "Quintanar"),
        Agustinito="Agustinito",
        Amadeo="Amadeo",
        Anacleto="Anacleto",
        Anselmo="Anselmo",
        Antero="Antero",
        Antón="Antón Raíces",
        Antonio="Antonio",
        Barcaza="Barcaza",
        Basilio="Basilio",
        Bautista="Bautista",
        Bedoya="Bedoya",
        Belisario="Belisario",
        Benítez="Benítez",
        Bismark="Bismark",
        Campillo=c("Campillo","\\b[C]hato\\b"),
        Carlos="Carlos",
        Pelaez="Peláez",
        Ripamilan=c("Cayetano",
                    "Cayetano Ripamilán",
                    "Ripamilán"),
        Celedonio="Celedonio",
        Colás="Colás",
        Corujedo="marqués de Corujedo",
        Frígilis=c("Frígilis","Crespo"),
        Custodio=c("Custodio"),
        Cuervo=c("Olías de Cuervo","señor Cuervo"),
        Diego="Diego",
        Escosura="Escosura",
        Estudiante=c("\\b[E]studiante\\b","Pepe","Trabuco"),
        Foja="Foja",
        Fortunato="Fortunato",
        "Francisco de Asís"="Francisco de Asís",
        "Francisco de Pas"="Francisco de Pas",
        "Francisco de Osuma"="Francisco de Osuna",
        Páez=c("Francisco Páez", "señor Páez", "señor de Páez"),
        "Francisco Carraspique"="Francisco Carraspique",
        Froilán="Froilán",
        Frutos=c("don Frutos","Frutos Redondo"),
        Fulgosio="Fulgosio",
        Germán="Germán",
        Glocester=c("Glocester","Restituto"),
        Infanzón=c("señor Infanzón", "el Infanzón"),
        Iriarte="Iriarte",
        Joaquinito="Joaquinito",
        Juanito="Juanito",
        Leandro="Leando",
        Maroto="Maroto",
        Vegallana=c("marqués de Vegallana","\\s{1}[M]arqués\\b"),
        Martínez="Martínez",
        Matías="Matías",
        Matiella="Matiella",
        monaguillo="monaguillo",
        "señor Orgaz"="señor Orgaz",
        Palma="\\b[P]alma\\b",
        Paquito=c("Paco","Paquito"),
        Palomo=c("Palomo","Rodríguez"),
        Parcerisa="Parcerisa",
        Pedro="Pedro",
        Perales="\\b[P]erales\\b",
        Pinón="Pinón",
        Pompeyo=c("Pompeyo","Pompeyo Guimarán","Guimarán"),
        Robustiano="Robustiano",
        Roque="señor Roque",
        Rosendo="Rosendo",
        Santos="don Santos",
        Sousa="Sousa",
        Trifón="Trifón",
        Vinagre="\\b[V]inagre\\b",
        Vinculete="Vinculete"
        ),
    mujeres=
      list(
        Ana=c("Ana",
              "Anita",
              "Regenta"),
        Obdulia=c("Obdulia",
                  "Obdulia Fandiño",
                  "Fandiño",
                  "Obdulita"),
        Agapita="Agapita",
        Águeda="Águeda",
        Angelina="Angelina",
        Anunciación=c("Anuncita","doña Anuncia"),
        Camila="Camila",
        Carolina=c("Carolina","Señora de Infanzón", "la Infanzón"),
        Celestina="Celestina",
        Edelmira="Edelmira",
        Emma="Emma",
        Fabiolita="Fabiolita",
        Fulgencia="Fulgencia",
        Gertrudis="Gertrudis",
        "La González"="la González",
        Juana="Juana",
        Lola="Lola",
        Lucía="doña Lucía",
        Marquesa=c("marquesa","Rufina"),
        Olvido="Olvido",
        Paula="doña Paula",
        Pepa="Pepa",
        Perpétua="Guimarán, Perpétua",
        Pilar="\\b[P]ilar\\b",
        Petra="Petra",
        Petrolina="doña Petronila",
        Ramona="Ramona",
        Rita="\\bRita\\b",
        Rosa="\\bRosa\\b",
        Rosita="Rosita",
        Rudesinda="Rudesinda",
        Servanda="Servanda",
        Társila="Társila",
        Teresa="\\b[T]eresa\\b",
        Teresina="Teresina",
        Úrsula="Úrsula",
        Visita=c("Visitación","\\b[V]isita\\b"),
        "Viuda de Corujedo"="viuda del marqués de Corujedo"
        )
  )
)


```

## Introducción

En este apartado, se analiza la obra "La Regenta" de Leopoldo Alas Clarín a partir de diferentes técnicas de análisis de contenido. Se tratan, en su mayor parte, de acercamientos estadísticos o cuantitativos a los textos literarios. Por lo tanto, representan una visión limitada de la obra y solo complementaria a la lectura y el análisis cualitativo detenido de la misma.  

Nos acercaremos al texto, primero, intentando descubrir cuáles palabras se destacan, sus frecuencias y distribuciones. Luego, analizaremos la obra desde la perspectiva de los personajes, sus relaciones y sus apariciones en la obra.


## Las palabras que cuentan

El primer paso del análisis consiste en cargar los datos que hemos preparado en la sección de [preparación de los datos](prepa.html) y convertirlo en un objeto de tipo *corpus*. Para ello, emplearemos el paquete de R llamado **quanteda**, que resulta bastante completo para el análisis de contenido. 

El código abajo carga los datos en la memoria, los convierte en un corpus y muestra algunas estadísticas básicas de los capítulos de la obra, como el número de palabras (*tokens*), el número de palabras únicas (*types*) y la cantidad de frases.

```{r}

# carga los datos de "La Regenta"
load("../textos/Regenta.RData")

# carga el paquete quanteda para 
# algunos análisis
library(quanteda)

# Elimina el título y el prólogo
regc <- regc[3:nrow(regc),]

# convierte en un documento corpus
cp <- corpus(regc, text_field = "texto")

# define los capítulos como nombre
# de los documentos
docnames(cp) <- regc$capitulo

# muestra estadísticas básicas de
# cada capítulo
reactable::reactable(summary(cp))

```

Vemos que los treinta capítulos de la obra tienen una extensión que va de poco más de ocho mil hasta aproximadamente veintiún mil palabras. No resulta nada sorprendente que las palabras únicas y el número de frases varían de forma proporcional.

Más interesante resulta explorar cuáles palabras se destacan en la obra. Para ello, emplearemos una técnica llamada *análisis de frecuencia de palabras*. En este caso, emplearemos una matriz de términos de documentos (*document-feature matrix*), que es una representación matricial de los textos en la que las filas representan los documentos y las columnas las palabras. Cada celda de la matriz contiene el número de veces que una palabra aparece en un documento.


```{r}

# convierte en una matriz de términos
dtm <- dfm( tokens(cp, remove_punct = TRUE, 
                  remove_numbers = TRUE, 
                  remove_symbols = TRUE), 
           tolower = TRUE)

dtm <- dfm_remove(dtm, c(stopwords("es"),"si"))

# muestra las 50 palabras más frecuentes
topfeatures(dtm, 50)

```

En este caso, hemos considerado palabras aisladas, pero podemos repetir el análisis con bigramas o trigramas, que son secuencias de dos o tres palabras consecutivas. Estas combinaciones permiten encontrar secuencias de ideas que pueden revelar ciertos contenidos o patrones en el texto.

```{r}

tk <- tokens(cp, remove_punct = TRUE, 
                  remove_numbers = TRUE, 
                  remove_symbols = TRUE)

tk <- tokens_remove(tk, stopwords("es"))

bi <- tokens_ngrams(tk, n = 2)

# convierte en una matriz de términos
dtm <- dfm(bi)

# muestra los 50 bigramas más frecuentes
topfeatures(dtm, 50)

tri <- tokens_ngrams(tk, n = 3)

# convierte en una matriz de términos
dtm <- dfm(tri)

# muestra los 50 trigramas más frecuentes
topfeatures(dtm, 50)

```

¿Qué vemos en los resultados de los bigramas y trigramas? El primer patrón que emerge es la presencia de nombres de personajes, como "don Víctor Quintanar", "don Álvaro" o "do Fermín". También aparecen nombres de lugares, como "Vetusta" o "Santa Cruz". Por último, encontramos algunas secuencias que parecen describir acciones o situaciones, como "señor marqués" o "señor don Fermín".





## Diccionarios y codificación temática 

diccionario



```{r, warning=F, message=F, error=F}

dic <- dictionary(
  list(
    familia=c("padre", "madre", "hijo", "hija", 
              "hermano", "hermana"),
    sociedad=c("vetustense","puebl","ciudad","conversa",
               "amig","noble","arist"),
    iglesia=c("cura","obispo","sacerdo","confesión",
              "religi","canónig","capilla"),
    economia=c("dinero","deuda","negoci","trabaj",
               "fortuna","rico","rica"),
    sentimientos=c("culpa","alegr","amor","remordimiento",
                   "ridículo","vergüenza","triste"),
    misticismo=c("Fermín de Pas","Fermín","\\bde Pas\\b",
                 "magistral", "espirit","dios"),
    adulterio=c("Álvaro Mesía","Álvaro","Mesía",
                "Presidente del Casino", "marido", 
                "placer", "pasión", "amante","amorío"),
    espacio=c("casino","catedral","vivero","casa",
              "espolón","teatro"),
    tiempo=c("otoño","verano","invierno","primavera",
             "semana santa","navidad")
  )
)
    
library(tenet)
    
tagCorpus(cp, 
          dic, 
          reshape.to = "sentence", 
          defaultPageSize = 3)

  
```

```{r, warning=F, message=F, error=F, fig.width=10, fig.height=8}

dicf <- dictionary(
  list(
    familia=c("padre", "madre", "hijo", "hija", "hermano", "hermana"),
    sociedad=c("vetustense","puebl","ciudad","conversa",
               "amig","noble","arist")
))


plotLexDiv(cp, 
           dicf, 
           title ="La Regenta", 
           subtitle = "Familia y sociedad en la novela", 
           palette = pal$cat.awtools.spalette.6[1:2])

```


Repetimos el mismo gráfico, ahora con las categorías de tiempo y espacio:

```{r, warning=F, message=F, error=F, fig.width=10, fig.height=8}

dicf <- dictionary(
  list(
    espacio=c("casino","catedral","vivero",
              "casa","espolón","teatro"),
    tiempo=c("otoño","verano","invierno",
             "primavera","semana santa","navidad")
))

plotLexDiv(cp, 
           dicf, 
           title ='La Regenta', 
           subtitle = "Espacio y tiempo en la novela", 
           palette = pal$cat.brewer.Dark2.8[c(1:4)])


dicf <- dictionary(
  list(
    social=c("casino","teatro","espolón",
             "Paseo de Verano","Paseo de los curas",
             "calle","plaza"),
    religioso=c("catedral","capilla","sacristía",
                "claustro","seminario"),
    doméstico=c("vivero","\\bcasa\\b","hogar","alcoba",
                "habitación","cama")))

ft <- filterWords(cp, dicf)

ft$name[ft$name!="002 - Prólogo"] <- paste0("Capítulo ",ft$name[ft$name!="002 - Prólogo"])

plotSpike(ft, 
          title = 'Los espacios de "La Regenta"', 
          subtitle = "Gráfico de dispersión léxica para distintos tipos de espacio.", 
          palette = pal$cat.brewer.Dark2.8[c(1:4)],
          label.size = 3, 
          line.width = 0.3, 
          ring.col="black")

```




```{r, warning=F, message=F, error=F}

xy <- countKeywords(cp, 
                    dic, 
                    rel.freq = F, 
                    quietly = TRUE)

# Elimina los términos no encontrados
xy <- xy[xy$frequency>0,]

xy$groups <- NULL

forceDirectedTree(xy,value_col = "frequency",
                  palette = pal$cat.awtools.bpalette.16, 
                  max.radius = 50, 
                  height = 500)

```

lo mismo se puede ver así:

```{r, warning=F, message=F, error=F}


plotVoronoiTree(data = xy,
                value_col = "frequency")

```

dd

Juan Benito Argüelles - Nomina de personajes de "La Regenta"

https://cvc.cervantes.es/literatura/cuadernos_del_norte/pdf/23/23_10.pdf


```{r, warning=F, message=F, error=F}


dich <- dictionary(
  list(
    hombres=
      list(
           Alvaro=c("Álvaro Mesía","Álvaro","Mesía",
                    "presidente del casino"),
           Saturnino=c("Saturnino Bermúdez","Saturnino",
                       "Bermúdez","Saturno","Saturnillo"),
           Fermin=c("Magistral","Provisor","Fermín",
                    "De Pas","Fermín de Pas","Magistral"),
           Victor=c("Víctor","Víctor Quintanar","Quintanar"),
           Otros=c(
                   "Agustinito","Amadeo","Anacleto",
                   "Anselmo","Antero","Antón Raíces",
                   "Antonio","Barcaza","Basilio",
                   "Bautista","Bedoya","Belisario",
                    "Benítez","Bismark","Campillo",
                   "\\b[C]hato\\b","don Carlos",
                   "Peláez","Cayetano",
                   "Cayetano Ripamilán","Ripamilán",
                   "Celedonio","Colás","marqués de Corujedo",
                   "Frígilis","Crespo","Custodio",
                   "Olías de Cuervo","señor Cuervo",
                   "Diego","Escosura","\\b[E]studiante\\b",
                   "Pepe","Trabuco","Foja","Fortunato",
                   "Francisco de Asís","Francisco de Pas",
                   "Francisco de Osuna","Francisco Páez", 
                   "señor Páez", "señor de Páez",
                   "Francisco Carraspique","Froilán",
                   "don Frutos","Frutos Redondo","Fulgosio",
                   "Germán","Glocester","Restituto",
                   "señor Infanzón", "el Infanzón",
                   "Iriarte","Joaquinito","Juanito",
                   "Leando","Maroto","marqués de Vegallana",
                   "\\s{1}[M]arqués\\b","Martínez",
                   "Matías","Matiella","monaguillo",
                   "señor Orgaz","\\b[P]alma\\b",
                   "Paco","Paquito","Palomo",
                   "Rodríguez","Parcerisa","Pedro",
                   "\\b[P]erales\\b","Pinón",
                   "Pompeyo","Pompeyo Guimarán","Guimarán",
                   "Robustiano","señor Roque",
                   "Rosendo","don Santos","Sousa",
                   "Trifón","\\b[V]inagre\\b",
                   "Vinculete")
           ),
    mujeres=
      list(
        Ana=c("Ana","Anita","Regenta"),
        Obdulia=c("Obdulia","Obdulia Fandiño",
                  "Fandiño","Obdulita"),
        Otras=c(
                "Agapita","Águeda","Angelina",
                "Anuncita","doña Anuncia","Camila",
                "Carolina","Señora de Infanzón", "la Infanzón",
                "Celestina","Edelmira","Emma",
                "Fabiolita","Fulgencia","Gertrudis",
                "la González","Juana","Lola",
                "doña Lucía","marquesa","Rufina",
                "Olvido","doña Paula","Pepa",
                "Guimarán, Perpétua","\\b[P]ilar\\b",
                "Petra","doña Petronila","Ramona",
                "\\bRita\\b","\\bRosa\\b","Rosita",
                "Rudesinda","Servanda","Társila",
                "\\b[T]eresa\\b","Teresina",
                "Úrsula","Visitación","\\b[V]isita\\b",
                "viuda del marqués de Corujedo")
    )
  )
)




xp <- countKeywords(cp, 
                    dich, 
                    rel.freq = F, 
                    group.var = "capitulo",
                    quietly = TRUE)

# Agrega los resultados por los dos niveles
# de código del diccionario
xx <- aggregate(list(frequency=xp$frequency), 
                by=list(groups=xp$groups, 
                        level1=xp$level2), 
                sum, na.rm=T)

# Elimina los términos no encontrados
# en el corpus
xx <- xx[xx$frequency>0,]

# Ordena por capítulo
xx <- xx[order(xx$groups),]

plotSankey(xx, 
           from = "level1", 
           to="groups", 
           value = "frequency", 
           opacity = 0.05)
 


```

```{r}

plotStream(xx, 
           x="groups",
           y="frequency", 
           group="level1",
           palette=pal$cat.ggsci.simpsons.16)


```



dddd

```{r, warning=F, message=F, error=F}

# Reorganiza el corpus según
# sentencias o frases
cs <- corpus_reshape(cp, "sentences")

# Calcula la frecuencia en la
# que dos codigos del mismo 
# diccionario aparecen juntos
# en cada frase
d1 <- matchCodes(cs, 
                dic, 
                level = 1, 
                quietly=TRUE)

# Ordena los resultados de mayor a menor
d1 <- d1[order(d1$value, decreasing = T),]


plotChord(d1, 
          from = "term1", 
          to ="term2", 
          value= "value")

```

Ahora con los personajes

```{r, warning=F, message=F, error=F}

# Reorganiza el corpus según
# sentencias o frases
cs <- corpus_reshape(cp, "sentences")

# Calcula la frecuencia en la
# que dos codigos del mismo 
# diccionario aparecen juntos
# en cada frase
d1 <- matchCodes(cs, 
                dich, 
                level = 2, 
                quietly=TRUE)

# Ordena los resultados de mayor a menor
d1 <- d1[order(d1$value, decreasing = T),]


plotChord(d1, 
          from = "term1", 
          to ="term2", 
          value= "value", elementId = "chord2")

```

aaa



```{r, warning=F, message=F, error=F, fig.width=12, fig.height=36}


nn <- data.frame()

for(i in 1:30){
  
  c1 <- cp[i]
  
  c1 <- corpus_reshape(c1, to="paragraphs")
  
  d1 <- matchCodes(c1, 
                   dic.per, 
                   level = 2, 
                   quietly=TRUE)
  
  d1$capitulo <- i
  
  d1 <- d1[order(d1$value, decreasing = T),]
  
  nn<- rbind(nn, d1)
  
}



library(network)
library(sna)
library(ggnetwork)

px <- list()

for(i in 1:30){

  n1 <- network(nn[nn$capitulo==i,], 
                directed = F)
  
  gn <- ggnetwork(n1, 
                  layout = "kamadakawai", 
                  cell.jitter = 0.75)

  p <- ggplot(gn, 
              aes(x = x, 
                  y = y, 
                  xend = xend, 
                  yend = yend)) +
          geom_edges(
                color = "grey90",
                aes(size=value), 
                curvature=0.25) +
        geom_edges(
                size=0.1, 
                curvature=0.25, 
                color="purple") +
          geom_nodetext(
                aes(label = vertex.names),
                fontface = "bold")+
          theme_blank()+
          labs(title=paste0("**Capítulo ",i,"**"))+
          theme(plot.title = 
                  ggtext::element_markdown(
                          size=15, 
                          color="darkgreen"), 
                legend.position = "none",
                plot.margin=grid::unit(
                  c(0.75,0.75,0.75,0.75), 
                  "cm"))

  px[[i]] <- p

}

library(egg)

ggarrange(plots=px, 
          ncol=3, 
          nrow=10)


```
