---
title: "<b>La Regenta</b><br>Análisis de la novela en R"
bibliography: references.bib
---

```{r setup, include=FALSE}

load("../textos/Tres_sombreros_de_copa.RData")

load("../textos/Regenta.RData")

library(quanteda)

regc <- regc[3:nrow(regc),]

# conviequanteda# convierte en un documento corpus
cp <- corpus(regc, text_field = "texto")

# define los capítulos como nombre
# de los documentos
docnames(cp) <- regc$capitulo


dic <- dictionary(
  list(
    familia=c("padre", "madre", "hijo", "hija", "hermano", "hermana"),
    sociedad=c("vetustense","señor","puebl","ciudad","conversa","amig","visit"),
    iglesia=c("cura","obispo","sacerdo","confesión","religi","canónig","capilla","basilica","cabildo","diócesis","obispado","sacrist","confes","monaguillo","Panteón","trascoro"),
    economia=c("dinero","deuda","negoci","trabaj","fortuna","rico","rica"),
    sentimientos=c("culpa","alegr","amor","remordimiento","ridículo","vergüenza","triste"),
    misticismo=c("Fermín de Pas","magistral","espirit","dios"),
    adulterio=c("Álvaro Mesía","Presidente del Casino", "marido", "placer", "pasión", "amante","amorío"),
    espacio=c("casino","catedral","vivero","casa","espolón","teatro","Encimada"),
    tiempo=c("otoño","verano","invierno","primavera","semana santa","navidad")
  )
)

dic.per <- dictionary(
  list(
    hombres=
      list(
        Alvaro=c("Álvaro Mesía",
                 "Álvaro",
                 "Mesía",
                 "presidente del casino"),
        Saturnino=c("Saturnino Bermúdez",
                    "Saturnino",
                    "Bermúdez",
                    "Saturno",
                    "Saturnillo"),
        Fermin=c("Magistral",
                 "Provisor",
                 "Fermín",
                 "De Pas",
                 "Fermín de Pas",
                 "Magistral"),
        Victor=c("Víctor",
                 "Víctor Quintanar",
                 "Quintanar"),
        Agustinito="Agustinito",
        Amadeo="Amadeo",
        Anacleto="Anacleto",
        Anselmo="Anselmo",
        Antero="Antero",
        Antón="Antón Raíces",
        Antonio="Antonio",
        Barcaza="Barcaza",
        Basilio="Basilio",
        Bautista="Bautista",
        Bedoya="Bedoya",
        Belisario="Belisario",
        Benítez="Benítez",
        Bismark="Bismark",
        Campillo=c("Campillo","\\b[C]hato\\b"),
        Carlos="Carlos",
        Pelaez="Peláez",
        Ripamilan=c("Cayetano",
                    "Cayetano Ripamilán",
                    "Ripamilán"),
        Celedonio="Celedonio",
        Colás="Colás",
        Corujedo="marqués de Corujedo",
        Frígilis=c("Frígilis","Crespo"),
        Custodio=c("Custodio"),
        Cuervo=c("Olías de Cuervo","señor Cuervo"),
        Diego="Diego",
        Escosura="Escosura",
        Estudiante=c("\\b[E]studiante\\b","Pepe","Trabuco"),
        Foja="Foja",
        Fortunato="Fortunato",
        "Francisco de Asís"="Francisco de Asís",
        "Francisco de Pas"="Francisco de Pas",
        "Francisco de Osuma"="Francisco de Osuna",
        Páez=c("Francisco Páez", "señor Páez", "señor de Páez"),
        "Francisco Carraspique"="Francisco Carraspique",
        Froilán="Froilán",
        Frutos=c("don Frutos","Frutos Redondo"),
        Fulgosio="Fulgosio",
        Germán="Germán",
        Glocester=c("Glocester","Restituto"),
        Infanzón=c("señor Infanzón", "el Infanzón"),
        Iriarte="Iriarte",
        Joaquinito="Joaquinito",
        Juanito="Juanito",
        Leandro="Leando",
        Maroto="Maroto",
        Vegallana=c("marqués de Vegallana","\\s{1}[M]arqués\\b"),
        Martínez="Martínez",
        Matías="Matías",
        Matiella="Matiella",
        monaguillo="monaguillo",
        "señor Orgaz"="señor Orgaz",
        Palma="\\b[P]alma\\b",
        Paquito=c("Paco","Paquito"),
        Palomo=c("Palomo","Rodríguez"),
        Parcerisa="Parcerisa",
        Pedro="Pedro",
        Perales="\\b[P]erales\\b",
        Pinón="Pinón",
        Pompeyo=c("Pompeyo","Pompeyo Guimarán","Guimarán"),
        Robustiano="Robustiano",
        Roque="señor Roque",
        Rosendo="Rosendo",
        Santos="don Santos",
        Sousa="Sousa",
        Trifón="Trifón",
        Vinagre="\\b[V]inagre\\b",
        Vinculete="Vinculete"
        ),
    mujeres=
      list(
        Ana=c("Ana",
              "Anita",
              "Regenta"),
        Obdulia=c("Obdulia",
                  "Obdulia Fandiño",
                  "Fandiño",
                  "Obdulita"),
        Agapita="Agapita",
        Águeda="Águeda",
        Angelina="Angelina",
        Anunciación=c("Anuncita","doña Anuncia"),
        Camila="Camila",
        Carolina=c("Carolina","Señora de Infanzón", "la Infanzón"),
        Celestina="Celestina",
        Edelmira="Edelmira",
        Emma="Emma",
        Fabiolita="Fabiolita",
        Fulgencia="Fulgencia",
        Gertrudis="Gertrudis",
        "La González"="la González",
        Juana="Juana",
        Lola="Lola",
        Lucía="doña Lucía",
        Marquesa=c("marquesa","Rufina"),
        Olvido="Olvido",
        Paula="doña Paula",
        Pepa="Pepa",
        Perpétua="Guimarán, Perpétua",
        Pilar="\\b[P]ilar\\b",
        Petra="Petra",
        Petrolina="doña Petronila",
        Ramona="Ramona",
        Rita="\\bRita\\b",
        Rosa="\\bRosa\\b",
        Rosita="Rosita",
        Rudesinda="Rudesinda",
        Servanda="Servanda",
        Társila="Társila",
        Teresa="\\b[T]eresa\\b",
        Teresina="Teresina",
        Úrsula="Úrsula",
        Visita=c("Visitación","\\b[V]isita\\b"),
        "Viuda de Corujedo"="viuda del marqués de Corujedo"
        )
  )
)


```

## Introducción

En este apartado, se analiza la obra "La Regenta" de Leopoldo Alas Clarín a partir de diferentes técnicas de análisis de contenido. Se tratan, en su mayor parte, de acercamientos estadísticos o cuantitativos a los textos literarios. Por lo tanto, representan una visión limitada de la obra y solo complementaria a la lectura y el análisis cualitativo detenido de la misma.

Nos acercaremos al texto, primero, intentando descubrir cuáles palabras se destacan, sus frecuencias y distribuciones. Luego, analizaremos la obra desde la perspectiva de los personajes, sus relaciones y sus apariciones en la obra.

## Las palabras que cuentan

El primer paso del análisis consiste en cargar los datos que hemos preparado en la sección de [preparación de los datos](prepa.html) y convertirlo en un objeto de tipo *corpus*. Para ello, emplearemos el paquete de R llamado **quanteda**, que resulta bastante completo para el análisis de contenido.

El código abajo carga los datos en la memoria, los convierte en un corpus y muestra algunas estadísticas básicas de los capítulos de la obra, como el número de palabras (*tokens*), el número de palabras únicas (*types*) y la cantidad de frases.

```{r}

# carga los datos de "La Regenta"
load("../textos/Regenta.RData")

# carga el paquete quanteda para 
# algunos análisis
library(quanteda)

# carga el paquete reactable que
# permitirá mostrar los resultados en
# una tabla interactiva
library(reactable)

# Elimina el título y el prólogo
regc <- regc[3:nrow(regc),]

# convierte en un documento corpus
cp <- corpus(regc, text_field = "texto")

# define los capítulos como nombre
# de los documentos
docnames(cp) <- regc$capitulo

# muestra estadísticas básicas de
# cada capítulo
reactable(summary(cp))

```

<br>

Vemos que los treinta capítulos de la obra tienen una extensión que va de poco más de ocho mil hasta aproximadamente veintiún mil palabras. No resulta nada sorprendente que las palabras únicas y el número de frases varíen de forma proporcional.

### Frecuencias de palabras

El próximo paso consiste en convertir el corpus en una matriz de términos. Para ello, primero convertimos los textos en *tokens*, que son las palabras individuales de los textos. Luego, eliminamos las palabras vacías (*stopwords*) y las palabras que no aportan información, como los números y los signos de puntuación. Este objeto será luego empleado en diversas técnicas de análisis de contenido.

```{r}

# convierte en tokens y remueve
# punctuación, símbolos y números
tk <- tokens(cp, remove_punct = TRUE, 
                  remove_numbers = TRUE, 
                  remove_symbols = TRUE)

# Elimina las palabras vacías
tk <- tokens_remove(tk, stopwords("es"))

```

<br>

Para poder explorar cuáles palabras se destacan en la obra podemos emplear una técnica llamada *análisis de frecuencia de palabras*. En este caso, crearemos una matriz de términos de documentos (*document-feature matrix*), que es una representación matricial de los textos en la que las filas representan los documentos y las columnas las palabras. Cada celda de la matriz contiene el número de veces que una palabra aparece en un documento.

El código abajo crea la matriz y convierte todos los términos en minúsculas para facilitar el cuenteo. Luego, muestra las cincuenta palabras más frecuentes en la obra.

```{r}

# convierte en una matriz de términos
dtm <- dfm(tk, 
           tolower = TRUE)

# muestra las 50 palabras más frecuentes
topfeatures(dtm, 50)

```

<br>

En este caso, hemos considerado palabras aisladas, pero podemos repetir el análisis con bigramas o trigramas, que son secuencias de dos o tres palabras consecutivas. Estas combinaciones permiten encontrar secuencias de ideas que pueden revelar ciertos contenidos o patrones en el texto.

```{r}

bi <- tokens_ngrams(tk, n = 2)

# convierte en una matriz de términos
dtm <- dfm(bi)

# muestra los 50 bigramas más frecuentes
topfeatures(dtm, 50)

tri <- tokens_ngrams(tk, n = 3)

# convierte en una matriz de términos
dtm <- dfm(tri)

# muestra los 50 trigramas más frecuentes
topfeatures(dtm, 50)

```

<br>

¿Qué vemos en los resultados de los bigramas y trigramas? El primer patrón que emerge es la presencia de nombres de personajes, como "don Víctor Quintanar", "don Álvaro" o "do Fermín". También aparecen nombres de lugares, como "Vetusta" o "Santa Cruz". Por último, encontramos algunas secuencias que parecen describir acciones o situaciones, como "señor marqués" o "señor don Fermín".

### Colocaciones

Otro recurso útil a la hora de explorar los términos más frecuentes en un texto proviene de las colocaciones. Las colocaciones son secuencias de palabras que aparecen juntas con más frecuencia de lo que se esperaría por azar. En otras palabras, son secuencias de palabras que tienen un significado especial o que se emplean en un contexto específico.

El código abajo emplea la función `textstat_collocations` del paquete **quanteda.textstats** para encontrar las colocaciones más frecuentes en el texto[^1]. En este caso, hemos considerado solo las colocaciones que aparecen al menos diez veces en el texto.

[^1]: No nos detendremos aquí en explicar los detalles del cálculo de los indicadores. Cada técnica suele estar asociada a un artículo o referencia de ayuda que aclara el algoritmo. Para saber más sobre la función `textstat_collocations`, puedes consultar la ayuda en R ejecutando el comando *help(textstat_collocations)* de la consola de R.

```{r}

# Carga el paquete
library(quanteda.textstats)

# Encuentra las colocaciones
col <- textstat_collocations(tk, 
                             min_count = 10)

# Muestra los resultados
reactable(col, resizable = TRUE, wrap=F)

```

<br>

Como hemos podido ver, vuelven a aparecer los nombres de los personajes, lugares, pero ahora también llaman la atención algunos términos que indican frecuencia (algunas veces, muchas veces, dos tres, cada día) o hacen referencia al tiempo (aquel momento, aquella tarde, media hora). Estos términos pueden ser útiles para entender el contexto en el que se desarrolla la obra.

### Palabras-clave

Otro recurso que disponemos para examinar el contenido de un texto es el análisis de palabras-clave. Podemos interesarnos por un tema o concepto específico y buscar en qué contexto aparece en el texto. En este caso, vamos a buscar la palabra "adulterio" y ver en qué contexto aparece en la obra.

Una estrategia sería ver cuántas veces aparece "adulterio" en la novela, pero eso no nos daría mucha información sobre el contexto en el que se emplea. Por eso, vamos a emplear la función `kwic` (*keyword in context*) del paquete **quanteda** para buscar la palabra en el texto y ver en qué contexto aparece.

El resultado es una tabla que muestra la palabra "adulterio" y las palabras que la rodean en el texto. De esta manera, podemos entender mejor cómo se emplea la palabra en la obra y qué significado tiene en el contexto de la novela.

```{r}

# Carga el paquete
library(quanteda)

# recreamos los tokens
# sin remover la puntuación
# o los stopwords
tk <- tokens(cp)

# Busca la palabra "adulterio" en
# su contexto
kw_amor <- kwic(tk, 
                pattern =  "adulterio")

# Muestra los resultados
reactable(kw_amor, 
          resizable = TRUE, 
          wrap=F)

```

<br>

Saltan a la vista los calificativos y acciones que se revelan cuando se analiza el contexto de "adulterio". Se ven atributos como "repugnante", "infame", "ominoso", "escándalo". También acciones que se asocian como respuesta al adulterio: "vengar", "duelo", "batirme". En pocas palabras, se nota el rechazo social al adulterio y se puede fácilmente imaginar un desaforado cornudo, pistola en mano, buscando venganza.  

Podemos emplear un tipo de visualización de datos llamado **árbol de palabras** para representar gráficamente el contexto en el que aparece la palabra "adulterio". En este caso, vamos a emplear la función `wordtree` del paquete **tenet** para crear un árbol de palabras que muestre las palabras que aparecen antes y después de "adulterio" en el texto. No obstante, como hemos visto, la palabra "adulterio" no aparece muchas veces en la novela, por lo que el árbol de palabras no será muy complejo ni tampoco interesante. Probemos algo más picante, que salga el "amor".

```{r, eval=F}

library(tenet)


wordtree(cp, "amor")

```

```{r, eval=T, echo=F}

library(tenet)

ur <- wordtree(cp, "amor", url.return = T)

htmltools::includeHTML(ur)

```

<br>

Ahora las cosas se ponen más interesantes. Vemos que las palabras cambian de tamaño según su frecuencia, de modo que sabemos que "amor de" resulta más común que "amor del", por ejemplo.  

Pero, ¿qué palabras debo elegir? ¿Cómo sé cuáles son las más relevantes? Para responder a estas preguntas, podemos emplear una técnica llamada **keyness**. Esta técnica compara la frecuencia de una palabra en un texto con su frecuencia en otro texto de referencia. Si la palabra aparece poco en el texto de referencia, entonces debería aparecer poco en el texto elegido. Si no es así, tenemos una palabra clave, entendida como un término cuya frecuencia resulta muy superior a la esperada.

El capítulo 8 de la novela es una delicia para emplear esa técnica. Se trata de un pasaje que contiene la descripción de una merienda en la casa de la marquesa de Vegallana y sus "preparativos" en la cocina. Emplearemos la función `textstat_keyness` del paquete **quanteda.textstats** para encontrar las palabras clave.


```{r}

# Cargamos los paquetes necesarios
library(quanteda.textstats)
library(quanteda.textplots)

# Volvemos a crear los tokens
# sin puntos ni stopwords

# convierte en tokens y remueve
# punctuación, símbolos y números
tk <- tokens(cp, remove_punct = TRUE, 
                  remove_numbers = TRUE, 
                  remove_symbols = TRUE)

# Elimina las palabras vacías
tk <- tokens_remove(tk, stopwords("es"))

# Creamos la matriz de frecuencia
# de términos
dtm <- dfm(tk)

# Calculamos la estadística, 
# considerando el capítulo 8 como
# objetivo y el resto de la novela
# como referencia
key <- textstat_keyness(dtm, 
                        target = "08")

# Visualizamos los resultados
textplot_keyness(key)


```

<br>

Las palabras asociadas a la comida se destacan: cocina, despensa, cocinero, fogón, pinche, merienda, almíbares. También se destacan palabras asociadas a la nobleza: marques, marquesa, regencia, así como el lugar de las tertulias (el salón amarillo). De otro lado, vemos las palabras que está fuera: Magistral, Fermín, Víctor, Ana, Quintanar, que son personajes que no aparecen en el capítulo 8 o apenas lo hacen.

Podemos añadir información empleando la función `plotKeyness` del paquete **tenet** para visualizar los resultados de una manera interactiva y bidimensional. Nos interesa saber, además del `chi2`, la frecuencia de las palabras. No es lo mismo una palabra rara que aparece poco que otra que no resulta tan común en la obra, pero que se emplea mucho en el capítulo en cuestión.

```{r}

# carga el paquete
library(tenet)

# crea el gráfico
plotKeyness(cp, 
            ref.cat= "08")



```

<br>

De ese modo, las palabras que se encuentren lo más lejos del eje horizontal y vertical serán las más específicas del capítulo. Por otra parte, aquellas que se encuentren más a la derecha, so. las más frecuentes en el capítulo 8. Por lo tanto, términos como "visita", "cocina", "marqués" se destacan tanto por su particular incidencia en el capítulo, como por su alta frecuencia. También vemos en rojo las palabras empleadas menos que lo esperado. 

Si queremos analizar cuáles son las expresiones de peso en los demás capítulos, basta cambiar el argumento `ref.cat` por el número del capítulo que nos interese. Estos pasos exploratorios nos permiten tener una idea de los temas y personajes que aparecen en cada capítulo y, por consiguiente, de las palabras clave que los caracterizan.


## Codificación temática

Entendemos por codificación temática el proceso de análisis de un texto con el propósito de identificar ideas, conceptos y temas recurrentes. Se utiliza de forma amplia en las ciencias sociales, como la sociología o la antropología, para analizar entrevistas, encuestas o documentos. En este caso, vamos a emplear la codificación temática para identificar los temas y conceptos que aparecen en la novela.

Como temas, por ejemplo, podemos tener el tiempo (las estaciones del año, el paso del tiempo, el momento del día, las fiestas religiosas), el espacio (el hogar, los ambientes de interacción social, la iglesia), la familia (los padres, los hijos, los hermanos), la sociedad (los nobles, los plebeyos, los campesinos), entre otros. 

La forma más tradicional de codificación temática consiste en imprimir los documentos, leerlos detenidamente y realizar marcas o anotaciones en los márgenes. Sin embargo, en la era digital, podemos emplear herramientas de análisis de texto que nos ayudan a llevar a cabo esta tarea de forma más rápida y eficiente. Los diccionarios (o léxicos) son una de las más comunes.

### El uso de diccionarios

Un diccionario corresponde a un conjunto de palabras clave asociados a un tema. Por ejemplo, cuando pienso en la familia, me vienen a la mente palabras como "padre", "madre", "hijo", "hermano", "hermana","tío", "tía", "abuelo", "abuela". Algunos más radicales incluirían los cuñados y parientes más lejanos. Si lo expresara de forma algorítmica sería algo así:

familia = c("padre", "madre", "hijo", "hermano", "hermana", "tío", "tía", "abuelo", "abuela")

Al buscar esas palabras en uno o varios textos, sabré que se menciona de alguna manera la familia y, principalmente, dónde y cuántas veces.

Abajo hemos creado un diccionario con palabras clave asociadas a diferentes temas. En este caso, hemos considerado la familia, la sociedad, la iglesia, la economía, los sentimientos, el misticismo, el adulterio, el espacio y el tiempo.

Luego, utilizo la función `tagCorpus` del paquete **tenet** para etiquetar de forma automática los textos con las palabras clave del diccionario frase a frase. Este procedimiento también me dice cuál es la categoría o tema más importante encontrado en la frase, cuáles son todos los temas encontrados, la cantidad de categorías y el número de palabras clave coincidentes. También permite filtrar y reordenar los resultados.

```{r, warning=F, message=F, error=F}

# Crea un diccionario con palabras clave
# sobre algunos temas de interés en la
# novela
dic <- dictionary(
  list(
    familia=c("padre", "madre", "hijo", "hija", 
              "hermano", "hermana"),
    sociedad=c("vetustense","puebl","ciudad","conversa",
               "amig","noble","arist"),
    iglesia=c("cura","obispo","sacerdo","confesión",
              "religión","religios","canónig","capilla"),
    economia=c("dinero","deuda","negoci","trabaj",
               "fortuna","\\brico","\\brica"),
    sentimientos=c("culpa","alegr","\\bamor\\b","remordimiento",
                   "ridículo","vergüenza","triste"),
    misticismo=c("Fermín de Pas","Fermín","\\bde Pas\\b",
                 "magistral", "espirit","dios"),
    adulterio=c("Álvaro","Mesía","adulte","amante",
                "Presidente del", "marido", 
                "placer", "pasión", "amante","amorío"),
    espacio=c("casino","catedral","vivero","\\bcasa\\b",
              "espolón","teatro"),
    tiempo=c("otoño","verano","invierno","primavera",
             "semana santa","navidad","\\bdía\\b","noche",
             "tarde","la mañana","madrugada")
  )
)
    
# Carga el paquete tenet
library(tenet)

# Genera el etiquetado de 
# las frases según el diccionario
tagCorpus(cp, 
          dic, 
          reshape.to = "sentence", 
          defaultPageSize = 3)

  
```

<br>

El resultado son frases palabras pintadas de distintos colores de acuerdo con los temas a que pertenecen, como si hubiesen sido resaltadas con un marcador. De ese modo, se pude realizar una lectura rápida y visual de la incidencia de los temas en el texto, manteniendo todo el contexto de la obra.

### Ubicación de temas en el texto

La tabla anterior resulta muy útil si queremos examinar las palabras en su contexto y regresar al documento para entender mejor cómo se utilizan. Sin embargo, si queremos tener una visión general de la distribución de los temas en el texto, podemos utilizar un gráfico de dispersión léxica. Se trata de una técnica de visualización de datos que representa un texto como un intervalor cortado por puntos o líneas verticales que corresponden a las palabras clave encontradas. 

La función `plotLexDiv` del paquete **tenet** permite generar un gráfico de dispersión léxica que muestra la distribución de las palabras clave en el texto coloreadas por tema del diccionario. No se recomienda utilizar muchas categorías en un solo gráfico, puesto que la visualización se vuelve confusa y resulta muy difícil identificar patrones.

El siguiente código genera un gráfico de dispersión léxica, utilizando un diccionario con palabras clave asociadas a los temas de espacio y tiempo.

```{r, warning=F, message=F, error=F, fig.width=10, fig.height=8}

# Crea un diccionario solo
# con dos temas: espacio y tiempo
dicf <- dictionary(
  list(
    espacio=c("casino","catedral","vivero",
              "casa","espolón","teatro",
              "calle","plaza","Paseo de Verano",
              "salón","tertulia"),
    tiempo=c("otoño","verano","invierno","primavera",
             "semana santa","navidad","\\bdía\\b","noche",
             "tarde","la mañana","madrugada")
))

# Crea el gráfico de dispersión
# léxica
plotLexDiv(cp, 
           dicf, 
           title ='La Regenta', 
           subtitle = "Espacio y tiempo en la novela", 
           palette = pal$cat.brewer.Dark2.8[c(1:4)])
```

<br>

Como podemos observar, las palabras clave relacionadas al espacio y tiempo se intercalan sin presentar un patrón claro. Por ello, sería útil realizar un análisis más detallado de los espacios (y de los tiempos) mencionados en la novela. Para ello, podemos utilizar la función `filterWords` del paquete **tenet** para seleccionar solo las palabras clave relacionadas al espacio y generar un gráfico de dispersión léxica interactivo que muestre la distribución de estos términos en el texto empleando la función `plotSpike`.

Creamos un nuevo diccionario con tres categorías analíticas del espacio: social, religioso y doméstico. El primer tipo reúne aquellos lugares de encuentro y diversión, como casinos, teatros y salones donde se da la interacción de los personajes nobles y de alta sociedad. 

El segundo se encuentra representado por los lugares de culto, como catedrales y capillas. Son parte de los dominios de Fermín de Pas y su importancia en la trama viene de la fe que confesa Ana y su relación con el misticismo.

El tercero congrega el ambiente doméstico de carácter íntimo. Son lugares de vida cotidiana, como la casa, las habitaciones, la alcoba y las cocinas. Muchas de las escenas de la novela transcurren en estos espacios, donde se reflejan las angustias de Ana, como la expresión y transgresión de la intimidad del hogar.

```{r}

# Crea un diccionario solo sobre espacio,
# con subcategorías más detalladas
dicf <- dictionary(
  list(
    social=c("casino","teatro","espolón",
             "Paseo de Verano","Paseo de los curas",
             "calle","plaza","tertulia","salon"),
    religioso=c("catedral","capilla","sacristía",
                "claustro","seminario"),
    doméstico=c("vivero","\\bcasa\\b","hogar","alcoba",
                "habitación","cama","cocina","despensa")))

# Filtra las palabras clave empleando
# el nuevo diccionario
ft <- filterWords(cp, dicf)

# Añade la palabra capítulo al número
# de los capítulos para facilitar la
# lectura de los datos
ft$name <- paste0("Capítulo ",ft$name)

# Genera el gráfico de dispersión léxica
# circular interactivo
plotSpike(ft, 
          title = 'Los espacios de "La Regenta"', 
          subtitle = "Gráfico de dispersión léxica para distintos tipos de espacio.", 
          palette = pal$cat.brewer.Dark2.8[c(1:4)],
          label.size = 3, 
          line.width = 0.3, 
          ring.col="black")

```

<br>

Ahora, los patrones quedan mucho más evidentes. Los espacios religiosos se destacan en los dos primeros capítulos de forma clara, así como en el capítulo 23. Además, es ahí donde termina la novela. Los ambientes domésticos, predominantes en los pasajes dedicados a la interacción con Ana, que se alternan con los espacios "sociales" en los que se desenvuelve la vida de la ciudad y de los demás personajes.


### Peso de los temas

¿Cuál la importancia de cada tema en la obra? Para responder a esta pregunta, podemos calcular la prevalencia de los temas en el texto. El peso de un tema se calcula de dos maneras: 

(a) por **la frecuencia absoluta** - que consiste en solamente contar el número de palabras clave asociadas a ese tema en el texto; o

(b) por **la frecuencia relativa** - obtenida dividiendo el número de palabras clave asociadas a ese tema por el número total de palabras en el texto. En ese sentido, representa una medida de densidad del tema.

Mientras que la frecuencia absoluta nos da una idea de la cantidad de veces que un tema es mencionado, la frecuencia relativa nos permite comparar la importancia de los temas en textos de diferente longitud.


```{r, warning=F, message=F, error=F}

# La función countKeywords
# cuenta las palabras clave de un
# diccionario en un texto
xy <- countKeywords(cp, 
                    dic, 
                    rel.freq = F, 
                    quietly = TRUE)

# Elimina los términos no encontrados
xy <- xy[xy$frequency>0,]

# Elimina la variable de grupos
# (no hay grupos en este caso)
xy$groups <- NULL

# Muestra los resultados
reactable(xy, resizable = TRUE)

```

<br>

Si ordenamos los valores de la frecuencia del mayor al menor, vemos que el misticismo y el adulterio aparecen entre los más frecuentes. El primero, por la presencia de Fermín de Pas y su relación con Ana, y el segundo, por la trama principal de la novela. El espacio de la casa también es relevante.

Sin embargo, la tabla no contiene información agregada por tema. Podríamos utilizar una función en R para agregar los resultados o emplear diferentes técnicas de visualización para comparar los temas. En este caso, utilizaremos un gráfico de redes jerárquicas para visualizar la relación entre los temas y su frecuencia en el texto. 

```{r}

# Crea una red de temas con
# los resultados obtenidos
forceDirectedTree(xy,
                  value_col = "frequency",
                  max.radius = 60,
                  height=500)

```

<br>

Vemos círculos de distintos tamaños en el gráfico. Representan los grandes temas y su tamaño indica su peso en la novela. Cada uno posee un conjunto de otros círculos más pequeños de mismo color que indican la importancia de cada palabra clave dentro del tema. Así que el "Misticismo", por ejemplo, aparece como el tema más relevante y "Magistral", "Diós" y "Fermín" como sus palabras clave centrales. La economía, por otra parte, parece no importar mucho en Vetusta.

Otra manera de visualizar los mismos datos es a través de un **treemap**. En este caso, los temas se representan como rectángulos de distintos tamaños y colores, donde el tamaño indica la importancia del tema y el color, su relación con otros temas. El gráfico abajo es una versión modificada que emplea el algoritmo de Voronoi para distribuir las áreas de forma precisa, pero con formas más libres, incluso no rectangulares. Se llama **Voronoi Tree**.

```{r, warning=F, message=F, error=F}

# Gráfico de Voronoi
plotVoronoiTree(data = xy,
                value_col = "frequency")

```

<br>

La diferencia central entre este último gráfico y el anterior se encuentra en el hecho de que la atención está centrada en la contribución de las palabras clave en la composición de cada tema. El la visualización anterior, el foco estaba en el peso relativo de los temas mucho más que en sus componentes empíricos concretos.

### Personajes en lugar de temas

¿Qué tal si analizamos los personajes en lugar de los temas? ¿Cómo se distribuyen en la novela? ¿Cuál es su importancia relativa? Para responder a estas preguntas, podemos emplear la misma lógica de análisis de temas, pero aplicada a los personajes. 

En primer lugar, creamos un diccionario con los personajes de la novela a partir de la nómina de personajes de la novela elaborada por Argüeles [-@arguelles1984].

```{r, warning=F, message=F, error=F}


dich <- dictionary(
  list(
    hombres=
      list(
           Alvaro=c("Álvaro Mesía","Álvaro","Mesía",
                    "presidente del casino"),
           Saturnino=c("Saturnino Bermúdez","Saturnino",
                       "Bermúdez","Saturno","Saturnillo"),
           Fermin=c("Magistral","Provisor","Fermín",
                    "De Pas","Fermín de Pas","Magistral"),
           Victor=c("Víctor","Víctor Quintanar","Quintanar"),
           Otros=c(
                   "Agustinito","Amadeo","Anacleto",
                   "Anselmo","Antero","Antón Raíces",
                   "Antonio","Barcaza","Basilio",
                   "Bautista","Bedoya","Belisario",
                    "Benítez","Bismark","Campillo",
                   "\\b[C]hato\\b","don Carlos",
                   "Peláez","Cayetano",
                   "Cayetano Ripamilán","Ripamilán",
                   "Celedonio","Colás","marqués de Corujedo",
                   "Frígilis","Crespo","Custodio",
                   "Olías de Cuervo","señor Cuervo",
                   "Diego","Escosura","\\b[E]studiante\\b",
                   "Pepe","Trabuco","Foja","Fortunato",
                   "Francisco de Asís","Francisco de Pas",
                   "Francisco de Osuna","Francisco Páez", 
                   "señor Páez", "señor de Páez",
                   "Francisco Carraspique","Froilán",
                   "don Frutos","Frutos Redondo","Fulgosio",
                   "Germán","Glocester","Restituto",
                   "señor Infanzón", "el Infanzón",
                   "Iriarte","Joaquinito","Juanito",
                   "Leando","Maroto","marqués de Vegallana",
                   "\\s{1}[M]arqués\\b","Martínez",
                   "Matías","Matiella","monaguillo",
                   "señor Orgaz","\\b[P]alma\\b",
                   "Paco","Paquito","Palomo",
                   "Rodríguez","Parcerisa","Pedro",
                   "\\b[P]erales\\b","Pinón",
                   "Pompeyo","Pompeyo Guimarán","Guimarán",
                   "Robustiano","señor Roque",
                   "Rosendo","don Santos","Sousa",
                   "Trifón","\\b[V]inagre\\b",
                   "Vinculete")
           ),
    mujeres=
      list(
        Ana=c("Ana","Anita","Regenta"),
        Obdulia=c("Obdulia","Obdulia Fandiño",
                  "Fandiño","Obdulita"),
        Otras=c(
                "Agapita","Águeda","Angelina",
                "Anuncita","doña Anuncia","Camila",
                "Carolina","Señora de Infanzón", "la Infanzón",
                "Celestina","Edelmira","Emma",
                "Fabiolita","Fulgencia","Gertrudis",
                "la González","Juana","Lola",
                "doña Lucía","marquesa","Rufina",
                "Olvido","doña Paula","Pepa",
                "Guimarán, Perpétua","\\b[P]ilar\\b",
                "Petra","doña Petronila","Ramona",
                "\\bRita\\b","\\bRosa\\b","Rosita",
                "Rudesinda","Servanda","Társila",
                "\\b[T]eresa\\b","Teresina",
                "Úrsula","Visitación","\\b[V]isita\\b",
                "viuda del marqués de Corujedo")
        )
  )
)

```

<br>

Como se puede observar, se tratan de muchos personajes, algunos de ellos con varios nombres o formas de denominación. Una vez que ya tenemos el diccionario en manos, podemos proceder a contar la frecuencia de aparición de los personajes en la novela. 

Para añadir emoción al asunto, vamos a hacerlo por capítulo. De esa manera, seremos capaces de acompañar la evolución de los personajes a lo largo de la novela, su participación en cada etapa y su rol en la estructura. 

```{r, warning=F, message=F, error=F}

# cuenta la frecuencia de los personajes
# en la novela por capítulo
xp <- countKeywords(cp, 
                    dich, 
                    rel.freq = F, 
                    group.var = "capitulo",
                    quietly = TRUE)

# Agrega los resultados por los dos niveles
# de código del diccionario
xx <- aggregate(list(frequency=xp$frequency), 
                by=list(groups=xp$groups, 
                        level1=xp$level2), 
                sum, na.rm=T)

# Elimina los términos no encontrados
# en el corpus
xx <- xx[xx$frequency>0,]

# Ordena por capítulo
xx <- xx[order(xx$groups),]

# Muestra los resultados
reactable(xx, resizable=TRUE)

```

<br>

Podemos ver cómo Ana ni siempre es la que más aparece asociada a otros en la novela. En algunos capítulos Fermín o Álvaro toman la delantera, mientras que en otros pasajes el protagonismo es más coral, con varios personajes siendo mencionados simultáneamente.

Como en el ejemplo anterior, también podemos emplear técnicas de visualización de datos para representar la información de manera más clara y atractiva. No obstante, ahora disponemos de una información adicional -el capítulo-, de modo que la información está más detallada y requiere otros enfoques para su representación gráfica.

Una primera alternativa consiste en emplear un diagrama de Sankey, que nos permitirá visualizar la relación entre los personajes y los capítulos. Se trata de un diagrama de flujo en el que los nodos representan las entidades y las conexiones entre ellos las relaciones. En este caso, los nodos serán los personajes y los capítulos, y las conexiones las apariciones de los personajes en los capítulos. 

La función `plotSankey` de `tenet` nos permite hacerlo de manera sencilla. solo tenemos que indicarle los datos, el nodo de origen ("from="), el nodo de destino ("to=") y el valor ("value=") que queremos representar. 

```{r}
plotSankey(xx, 
           from = "level1", 
           to="groups", 
           value = "frequency", 
           opacity = 0.05)
 
```

<br>

Los resultados son reveladores. Aunque Ana es el personaje que más aparece en la novela, su presencia no es constante a lo largo de los capítulos. En algunos de ellos, como el 8 o el 22, aparece de modo tímido. Esta tendencia resulta aún más acentuada en el caso de los demás personajes. 

Aunque el diagrama de Sankey es una buena opción, posee una limitación clara: solo permite visualizar los datos de un personaje o un capítulo a la vez. Para superar dicha restricción, podemos emplear un diagrama de flujo (streamgraph) que nos permita visualizar la evolución de todos los personajes a lo largo de los capítulos.

Lo haremos con la función `plotStream` de `tenet`. Al igual que en el caso anterior, solo tenemos que indicarle los datos, el nodo de origen ("x="), el nodo de destino ("y=") y el grupo ("group="). También podemos elegir la paleta de colores que queremos emplear ("palette=").

```{r}

plotStream(xx, 
           x="groups",
           y="frequency", 
           group="level1",
           palette=pal$cat.ggsci.simpsons.16)


```

<br>

En este último gráfico queda más clara la evolución de los personajes en la novela y los momentos en los que el autor decide vincularles más o menos en su narrativa. Además, al pasar el cursor sobre un capítulo, podemos ver la frecuencia de aparición de todos y cada uno de los personajes en ese capítulo en concreto.

### Asociación entre temas y personajes

```{r, warning=F, message=F, error=F}

# Reorganiza el corpus según
# sentencias o frases
cs <- corpus_reshape(cp, "sentences")

# Calcula la frecuencia en la
# que dos codigos del mismo 
# diccionario aparecen juntos
# en cada frase
d1 <- matchCodes(cs, 
                dic, 
                level = 1, 
                quietly=TRUE)

# Ordena los resultados de mayor a menor
d1 <- d1[order(d1$value, decreasing = T),]


plotChord(d1, 
          from = "term1", 
          to ="term2", 
          value= "value")

```

Ahora con los personajes

Creamos un diccionario con todos los personajes sin agregar.

```{r}

# diccionario de personajes
# sin agregar en una categoría
# otros y otras
dic.per <- dictionary(
  list(
    hombres=
      list(
        Alvaro=c("Álvaro Mesía",
                 "Álvaro",
                 "Mesía",
                 "presidente del casino"),
        Saturnino=c("Saturnino Bermúdez",
                    "Saturnino",
                    "Bermúdez",
                    "Saturno",
                    "Saturnillo"),
        Fermin=c("Magistral",
                 "Provisor",
                 "Fermín",
                 "De Pas",
                 "Fermín de Pas",
                 "Magistral"),
        Victor=c("Víctor",
                 "Víctor Quintanar",
                 "Quintanar"),
        Agustinito="Agustinito",
        Amadeo="Amadeo",
        Anacleto="Anacleto",
        Anselmo="Anselmo",
        Antero="Antero",
        Antón="Antón Raíces",
        Antonio="Antonio",
        Barcaza="Barcaza",
        Basilio="Basilio",
        Bautista="Bautista",
        Bedoya="Bedoya",
        Belisario="Belisario",
        Benítez="Benítez",
        Bismark="Bismark",
        Campillo=c("Campillo","\\b[C]hato\\b"),
        Carlos="Carlos",
        Pelaez="Peláez",
        Ripamilan=c("Cayetano",
                    "Cayetano Ripamilán",
                    "Ripamilán"),
        Celedonio="Celedonio",
        Colás="Colás",
        Corujedo="marqués de Corujedo",
        Frígilis=c("Frígilis","Crespo"),
        Custodio=c("Custodio"),
        Cuervo=c("Olías de Cuervo","señor Cuervo"),
        Diego="Diego",
        Escosura="Escosura",
        Estudiante=c("\\b[E]studiante\\b","Pepe","Trabuco"),
        Foja="Foja",
        Fortunato="Fortunato",
        "Francisco de Asís"="Francisco de Asís",
        "Francisco de Pas"="Francisco de Pas",
        "Francisco de Osuma"="Francisco de Osuna",
        Páez=c("Francisco Páez", "señor Páez", "señor de Páez"),
        "Francisco Carraspique"="Francisco Carraspique",
        Froilán="Froilán",
        Frutos=c("don Frutos","Frutos Redondo"),
        Fulgosio="Fulgosio",
        Germán="Germán",
        Glocester=c("Glocester","Restituto"),
        Infanzón=c("señor Infanzón", "el Infanzón"),
        Iriarte="Iriarte",
        Joaquinito="Joaquinito",
        Juanito="Juanito",
        Leandro="Leando",
        Maroto="Maroto",
        Vegallana=c("marqués de Vegallana","\\s{1}[M]arqués\\b"),
        Martínez="Martínez",
        Matías="Matías",
        Matiella="Matiella",
        monaguillo="monaguillo",
        "señor Orgaz"="señor Orgaz",
        Palma="\\b[P]alma\\b",
        Paquito=c("Paco","Paquito"),
        Palomo=c("Palomo","Rodríguez"),
        Parcerisa="Parcerisa",
        Pedro="Pedro",
        Perales="\\b[P]erales\\b",
        Pinón="Pinón",
        Pompeyo=c("Pompeyo","Pompeyo Guimarán","Guimarán"),
        Robustiano="Robustiano",
        Roque="señor Roque",
        Rosendo="Rosendo",
        Santos="don Santos",
        Sousa="Sousa",
        Trifón="Trifón",
        Vinagre="\\b[V]inagre\\b",
        Vinculete="Vinculete"
        ),
    mujeres=
      list(
        Ana=c("Ana",
              "Anita",
              "Regenta"),
        Obdulia=c("Obdulia",
                  "Obdulia Fandiño",
                  "Fandiño",
                  "Obdulita"),
        Agapita="Agapita",
        Águeda="Águeda",
        Angelina="Angelina",
        Anunciación=c("Anuncita","doña Anuncia"),
        Camila="Camila",
        Carolina=c("Carolina","Señora de Infanzón", "la Infanzón"),
        Celestina="Celestina",
        Edelmira="Edelmira",
        Emma="Emma",
        Fabiolita="Fabiolita",
        Fulgencia="Fulgencia",
        Gertrudis="Gertrudis",
        "La González"="la González",
        Juana="Juana",
        Lola="Lola",
        Lucía="doña Lucía",
        Marquesa=c("marquesa","Rufina"),
        Olvido="Olvido",
        Paula="doña Paula",
        Pepa="Pepa",
        Perpétua="Guimarán, Perpétua",
        Pilar="\\b[P]ilar\\b",
        Petra="Petra",
        Petrolina="doña Petronila",
        Ramona="Ramona",
        Rita="\\bRita\\b",
        Rosa="\\bRosa\\b",
        Rosita="Rosita",
        Rudesinda="Rudesinda",
        Servanda="Servanda",
        Társila="Társila",
        Teresa="\\b[T]eresa\\b",
        Teresina="Teresina",
        Úrsula="Úrsula",
        Visita=c("Visitación","\\b[V]isita\\b"),
        "Viuda de Corujedo"="viuda del marqués de Corujedo"
        )
  )
)


```

```{r, warning=F, message=F, error=F}

# Emplea el corpus organizado
# según párrafos
cpp <- corpus(regp, 
              text_field = "texto")

# Calcula la frecuencia en la
# que dos códigos del mismo 
# diccionario aparecen juntos
# en cada párrafo
d1 <- matchCodes(cpp, 
                 dic.per, 
                 level = 2, 
                 quietly=TRUE)

# Ordena los resultados de mayor a menor
d1 <- d1[order(d1$value, decreasing = T),]

# Elimina las asociaciones con Ana
d1 <- d1[d1$term1!="Ana",]
d1 <- d1[d1$term2!="Ana",]

# Genera un gráfico de cuerdas
# para visualizar las asociaciones
plotChord(d1, 
          from = "term1", 
          to ="term2", 
          value= "value", 
          elementId = "chord3")

```

<br>

El siguiente código genera una visualización de red para cada capítulo que muestra la frecuencia en que los personajes aparecen juntos en los mismos párrafos. Hemos elegido eliminar a Ana por dos motivos. Primero, para facilitar la visualización, puesto que se trata del personaje principal y que aparece relacionada a casi todos los demás. Segundo, y más importante, su ausencia nos permite observar las relaciones entre los demás personajes, que de otro modo quedarían opacadas por la presencia de Ana. Por ejemplo, de ese modo podemos ver mejor cuándo Fermín y Álvaro toman el centro de la narración o cuando otros personajes interesantes, como la marquesa, se destacan.
 


```{r, warning=F, message=F, error=F, fig.width=12, fig.height=36}

# Carga los paquetes necesarios
library(network)
library(sna)
library(ggnetwork)
library(ggplot2)

# Crea una lista para guardar
# los gráficos de red
# de cada capítulo
px <- list()

# Para cada capítulo
for(i in 1:30){

  # Extrae el texto del capítulo
  c1 <- cp[i]
  
  # Reorganiza en párrafos
  c1 <- corpus_reshape(c1, to="paragraphs")
  
  # Calcula la frecuencia de los
  # personajes
  d1 <- matchCodes(c1, 
                   dic.per, 
                   level = 2, 
                   quietly=TRUE)
  
  # Elimina a Ana para facilitar
  # la visualización
  d1 <- d1[d1$term1!="Ana",]
  d1 <- d1[d1$term2!="Ana",]

  # Ordena los resultados
  d1 <- d1[order(d1$value, decreasing = T),]

  # Crea una red
  n1 <- network(d1, 
                directed = F)
  
  # Convierte en un layout
  # de red para la visualización
  gn <- ggnetwork(n1, 
                  layout = "kamadakawai", 
                  cell.jitter = 0.75)

  # Genera el gráfico
  p <- ggplot(gn, 
              aes(x = x, 
                  y = y, 
                  xend = xend, 
                  yend = yend)) +
          geom_edges(
                color = "grey90",
                aes(size=value), 
                curvature=0.25) +
        geom_edges(
                size=0.1, 
                curvature=0.25, 
                color="purple") +
          geom_nodetext(
                aes(label = vertex.names),
                fontface = "bold")+
          theme_blank()+
          labs(title=paste0("**Capítulo ",i,"**"))+
          theme(plot.title = 
                  ggtext::element_markdown(
                          size=15, 
                          color="darkgreen"), 
                legend.position = "none",
                plot.margin=grid::unit(
                  c(0.75,0.75,0.75,0.75), 
                  "cm"))

  # Almacena el gráfico en
  # la lista
  px[[i]] <- p

}

# Carga el paquete que
# permitirá visualizar
# las 30 redes en un
# solo gráfico
library(egg)

# Organiza los gráficos
# en tres columnas y diez
# filas
ggarrange(plots=px, 
          ncol=3, 
          nrow=10)

```




## *Clusters*, Análisis de correspondencia y escalonado de textos

### Análisis de conglomerados (*clusters*)

```{r}

tk <- tokens(cp, 
             remove_punct = T, 
             remove_numbers = T, 
             remove_separators = T, 
             remove_symbols = T)

tk <- tokens_remove(tk, 
                    pattern=stopwords("es"))

dtm <- dfm(tk)

library(quanteda.textstats)

tstat_dist <- as.dist(textstat_dist(dtm))
clust <- hclust(tstat_dist)

plot(clust, xlab = "Distance", ylab = NULL)



```


### Análisis de correspondencia (*CA*)


### Escalonado de textos: Wordfish

```{r}

library(quanteda.textmodels)
library(quanteda.textplots)
library(ggplot2)

wf <- textmodel_wordfish(dtm)

textplot_scale1d(wf) +
  geom_hline(yintercept = 0, 
             linetype = "dashed",
             color="red3")

```

Esta escala se podría interpretar de distintas maneras. Una de ellas es que los capítulos situados más a la izquierda representan una mayor intensidad de la vida social de Vetusta, mientras que aquellos más a la derecha se relacionan con la vida privada, íntima y la infancia de La Regenta.

También podríamos leer los resultados de acuerdo con el protagonismo o mayor centralidad de ciertos personajes según el punto de la escala. Más a la izquierda predominan los Marqueses, Álvaro Mesía (antes de su relación con Ana Ozores) y la sociedad vetustense. En el centro se sitúa Fermín de Pas, que se interpone entre la vida privada de Ana y la vida en sociedad. En la derecha encontramos a Víctor, su esposo, Álvaro (hechos consumados) y en el extremo, la familia de Ana, especialmente en su infancia.

De todas formas, ambas interpretaciones sugieren una dualidad entre la vida íntima y relativamente reservada de Ana en contraste con la vida social y pública de Vetusta. Los dos mundos se tocan en ocasiones concretas por intermedio de algunos actores que transitan dentre ellos, como Fermín de Pas o Álvaro Mesía.
